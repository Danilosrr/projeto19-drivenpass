// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id          Int    @id @default(autoincrement())
  email       String   @unique
  password    String 
  createdAt   DateTime @default(now())
  wifis       Wifi[]
  credentials Credential[]
  notes       Note[]
  cards       Card[]
  documents   Document[]
}

model Wifi {
  id        Int      @id @default(autoincrement())
  user      Users    @relation(fields: [userId], references: [id])
  userId    Int      
  name      String    
  network   String    
  password  String   
  createdAt DateTime @default(now())
  @@unique([userId,network], name: "networkIdentifier")
}

model Credential {
  id        Int      @id @default(autoincrement())
  user      Users    @relation(fields: [userId], references: [id])
  userId    Int
  name      String         
  url       String 
  username  String
  password  String   
  createdAt DateTime @default(now())
  @@unique([userId,name], name: "nameIdentifier")
}

model Note {
  id        Int      @id @default(autoincrement())
  user      Users    @relation(fields: [userId], references: [id])
  userId    Int      
  title     String    
  note      String    
  createdAt DateTime @default(now())
  @@unique([userId,title], name: "noteIdentifier")
}

enum cardType {
  debit
  credit
  both
}
enum docType {
  CNH
  RG
}

model Card {
  id             Int      @id @default(autoincrement())
  user           Users    @relation(fields: [userId], references: [id])
  userId         Int
  title          String
  number         String
  securityCode   String
  expirationDate String
  password       String
  isVirtual      Boolean
  type           cardType
  createdAt DateTime @default(now())
  @@unique([userId, title], name: "titleIdentifier")
}

model Document {
  id             Int     @id @default(autoincrement())
  user           Users   @relation(fields: [userId], references: [id])
  userId         Int
  type           docType
  title          String
  number         String
  issuingBody    String
  completeName   String
  emissionDate   String
  expirationDate String
  @@unique([userId, title], name: "titleIdentifier")
}